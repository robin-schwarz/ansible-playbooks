---
- name: Confluence Space Backup Automation
  hosts: confluence_servers
  gather_facts: false
  vars:
    confluence_base_url: "{{ lookup('env', 'confluence_base_url') }}"
    confluence_api_token: "{{ lookup('env', 'confluence_api_token') }}"
    confluence_email: "{{ lookup('env', 'confluence_email') }}"
    space_key: "{{ lookup('env', 'space_key') }}" 
    backup_dir: "/home/admin/semaphore"
    include_attachments: true
    max_retries: 150
    wait_seconds: 20
    timezone: "Europe/Amsterdam"

  tasks:
    - name: Ensure backup directory exists
      file:
        path: "{{ backup_dir }}"
        state: directory
        mode: '0755'

    - name: Get current date
      command: date +%d-%m-%Y
      environment:
        TZ: "{{ timezone }}"
      register: current_date
      changed_when: false

    - name: Start Confluence Space Export
      uri:
        url: "{{ confluence_base_url }}/wiki/rest/api/space/{{ space_key }}/export"
        method: POST
        user: "{{ confluence_email }}"
        password: "{{ confluence_api_token }}"
        force_basic_auth: yes
        body_format: json
        body: |
          {
            "exportType": "TYPE_HTML",
            "exportAttachments": {{ include_attachments | string | lower }},
            "schemes": ["custom"]
          }
        headers:
          X-Atlassian-Token: "no-check"
          X-Requested-With: "XMLHttpRequest"
          Content-Type: "application/json"
        status_code: [202, 200]
      register: export_response

    - name: Get export task ID
      set_fact:
        task_id: "{{ export_response.json.taskId }}"
      when: export_response.json is defined and export_response.json.taskId is defined

    - name: Check export progress
      uri:
        url: "{{ confluence_base_url }}/wiki/rest/api/longtask/{{ task_id }}"
        method: GET
        user: "{{ confluence_email }}"
        password: "{{ confluence_api_token }}"
        force_basic_auth: yes
        return_content: yes
      register: progress_response
      until: progress_response.json.status == 'COMPLETE' or progress_response.json.status == 'FAILED'
      retries: "{{ max_retries }}"
      delay: "{{ wait_seconds }}"
      when: task_id is defined

    - name: Download space export
      get_url:
        url: "{{ confluence_base_url }}/wiki/download/exportspaceresult/{{ task_id }}/{{ space_key }}-export.zip"
        dest: "{{ backup_dir }}/{{ space_key }}-backup-{{ current_date.stdout }}.zip"
        url_username: "{{ confluence_email }}"
        url_password: "{{ confluence_api_token }}"
        force_basic_auth: yes
      when: task_id is defined and progress_response.json.status == 'COMPLETE'

    - name: Cleanup old backups (keep last 7 days)
      find:
        paths: "{{ backup_dir }}"
        patterns: "{{ space_key }}-backup-*.zip"
        age: 7d
        recurse: no
      register: old_backups

    - name: Remove old backup files
      file:
        path: "{{ item.path }}"
        state: absent
      with_items: "{{ old_backups.files }}"

    - name: Handle export failure
      fail:
        msg: "Space export failed: {{ progress_response.json.statusDescription }}"
      when: task_id is defined and progress_response.json.status == 'FAILED'
